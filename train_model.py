# -*- coding: utf-8 -*-
"""train_model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XTX5kOtCYZhsJVgYfLwG7ACkVc3GJkgY
"""

import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
import joblib

# Load dataset
df = pd.read_csv("lithium_battery_materials.csv")

# Clean and encode
df = df[df['density'] > 0]
df['contains_transition_metal'] = df['contains_transition_metal'].astype(int)
df['element'] = df['elements'].apply(lambda x: eval(x)[0])  # Use first element in list
df['element_encoded'] = df['element'].astype('category').cat.codes

# Features and target
X = df[['element_encoded', 'contains_transition_metal', 'density']]
y = df['formation_energy_per_atom']

# Train model with fewer trees and limited depth to reduce size
model = RandomForestRegressor(n_estimators=50, max_depth=10, random_state=42)

# Split and train
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
model.fit(X_train, y_train)

# Save model and mapping
joblib.dump(model, 'model.pkl', compress=8)
joblib.dump(dict(zip(df['element'], df['element_encoded'])), 'element_mapping.pkl')